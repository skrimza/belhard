# # * Написать функцию перевода десятичного числа в двоичное и обратно, без
# # использования функции int
# # +
# # * Код Морзе для представления цифр и букв использует тире и точки. Напишите
# # функцию для кодирования текстового сообщения в соответствии с кодом Морзе.
# # (словари в помощь)
# # +
# # * Дан список чисел и на вход поступает число N, необходимо сместить список на
# # указанное число, пример: [1,2,3,4,5,6,7] N=3 ответ: [5,6,7,1,2,3,4]
# # * Дан список содержащий в себе различные типы данных, отфильтровать таким
# # образом, чтобы остались только строки, использование дополнительного списка
# # незаконно
# # * Дан список чисел, необходимо его развернуть без использования метода revese и
# # функции reversed, а так же дополнительного списка и среза
# # * Дан список рандомных чисел, необходимо отсортировать его в виде, сначала
# # четные, потом нечётные
# # * Дан список чисел, необходимо для каждого элемента посчитать сумму его
# # соседей, для крайних чисел одним из соседей является число с противоположной
# # стороны списка
# # * Дан словарь, ключ - Название страны, значение - список городов, на вход
# # поступает город, необходимо сказать из какой он страны
# # * Дан словарь словарей, ключ внешнего словаря - id пользователя, значение -
# # словарь с данными о пользователе (имя, фамилия, телефон, почта), вывести
# # имена тех, у кого не указана почта (нет ключа email или значение этого ключа -
# # пустая строка)

# # 1. Написать функцию-генератор, принимающую 3 аргумента (number, start, end), все аргументы целочисленные
# # Генератор должен возвращать number в степени от start до end:
# # number=2
# # start=3
# # end=5
# # result: 8, 16, 32

# # 2. Написать функцию-генератор, принимающая целое число count, и возвращающая указанное колличество
# # простых чисел:
# # count=5
# # result=2, 3, 5, 7, 11

# # 3. Написать рекурсивную функцию, принимающая строку, и разворачивающая ее задом на перед

# # 4**. Написать рукурсивную функцию, которая принимает целое число (depth), функция должна генерировать дерево указанной
# # глубины, (каждая ветвь имеет 2 дочерних ветки):
# # depth=3
# # result=[[[], []], [[], []]]


